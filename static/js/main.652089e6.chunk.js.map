{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","todoId","searchTitle","selectBy","selectTodo","setState","updateSearchTitle","event","target","value","updateStatus","filterByStatus","todo","completed","filterByTitle","title","toLowerCase","includes","this","props","todos","selectUser","search","visibleTodos","filter","className","htmlFor","type","id","placeholder","onChange","map","key","readOnly","classnames","onClick","userId","React","Component","request","endPoint","a","fetch","response","ok","json","Error","status","statusText","CurrentUser","user","loadUser","prevState","prevProps","selectedUser","data","clear","name","email","phone","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.652089e6.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport class TodoList extends React.Component {\n  state = {\n    todoId: 0,\n    searchTitle: '',\n    selectBy: '',\n  };\n\n  selectTodo = (todoId) => {\n    this.setState({ todoId });\n  }\n\n  updateSearchTitle = (event) => {\n    this.setState({ searchTitle: event.target.value });\n  }\n\n  updateStatus = (event) => {\n    this.setState({ selectBy: event.target.value });\n  }\n\n  filterByStatus = (todo) => {\n    const { selectBy } = this.state;\n\n    switch (selectBy) {\n      case 'active':\n        return !todo.completed;\n\n      case 'completed':\n        return todo.completed;\n\n      default:\n        return true;\n    }\n  }\n\n  filterByTitle = (todo) => {\n    const { searchTitle } = this.state;\n\n    return todo.title\n      ? todo.title.toLowerCase().includes(searchTitle.toLowerCase())\n      : false;\n  }\n\n  render() {\n    const {\n      todos,\n      selectUser,\n    } = this.props;\n\n    const { todoId, search } = this.state;\n    const visibleTodos = todos\n      .filter(this.filterByTitle)\n      .filter(this.filterByStatus);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <form>\n          <label htmlFor=\"search-query\">\n            Find Task&nbsp;\n          </label>\n          <input\n            type=\"text\"\n            id=\"search-query\"\n            placeholder=\"Type search word\"\n            value={search}\n            onChange={this.updateSearchTitle}\n          />\n          <br />\n          <label htmlFor=\"select-todo\">\n            Filter by status:&nbsp;\n          </label>\n          <select\n            id=\"select-todo\"\n            onChange={this.updateStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </form>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {visibleTodos.map(todo => (\n              <li\n                key={todo.id}\n                className=\"TodoList__item TodoList__item--unchecked\"\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly />\n                  <p>\n                    {`\n                    ${todo.title} - ${todo.completed ? 'Completed' : 'Active'}\n                    `}\n                  </p>\n                </label>\n                <button\n                  className={classnames(\n                    'TodoList__user-button',\n                    'button',\n                    {\n                      'TodoList__user-button--selected': todo.id === todoId,\n                    },\n                  )}\n                  type=\"button\"\n                  onClick={() => {\n                    selectUser(todo.userId);\n                    this.selectTodo(todo.id);\n                  }}\n                >\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nconst request = async(endPoint) => {\n  const response = await fetch(`${BASE_URL}${endPoint}`);\n\n  if (response.ok) {\n    return response.json();\n  }\n\n  throw new Error(`${response.status}: ${response.statusText}`);\n};\n\nexport const getTodos = () => request('/todos');\n\nexport const getUser = userId => request(`/users/${userId}`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  componentDidUpdate(prevState, prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadUser();\n    }\n  }\n\n  async loadUser() {\n    const selectedUser = await getUser(this.props.userId);\n\n    this.setState({ user: selectedUser.data });\n  }\n\n  render() {\n    const { userId, clear } = this.props;\n    const { user } = this.state;\n\n    if (!user) {\n      return <div>Something went wrong...</div>;\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:&nbsp;\n            {userId}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">\n          {user.name}\n        </h3>\n        <p className=\"CurrentUser__email\">\n          {user.email}\n        </p>\n        <p className=\"CurrentUser__phone\">\n          {user.phone}\n        </p>\n        <button\n          type=\"button\"\n          onClick={clear}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clear: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({ todos: todos.data });\n  }\n\n  clear = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectedUserId={selectedUserId}\n            selectUser={userId => (\n              this.setState({ selectedUserId: userId })\n            )}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser userId={selectedUserId} clear={this.clear} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}